import beast.base.inference.parameter.*;
import beast.base.inference.distribution.*;
import beast.base.evolution.tree.*;
import beast.base.evolution.tree.coalescent.*;
import beast.base.evolution.substitutionmodel.*;
import beast.base.evolution.alignment.*;
import beast.base.evolution.likelihood.*;

@data
Alignment alignment_data = nexus(file="primates.nex");

RealParameter theta ~ LogNormalDistributionModel(M=1, S=1);

PopulationFunction popFunc = ConstantPopulation(popSize=theta);
Tree tree ~ Coalescent(populationModel=popFunc, taxonset=alignment_data);

RealParameter kappa ~ LogNormalDistributionModel(M=1, S=1);

// Then use it in the Dirichlet distribution
RealParameter freqs ~ Dirichlet(alpha=[2.0, 2.0, 2.0, 2.0]);

HKY hky = HKY(kappa=kappa, frequencies=freqs);

@observed(data=alignment_data)
Alignment alignment ~ TreeLikelihood(tree=tree, siteModel=hky);