<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.beast2</groupId>
    <artifactId>beast2lang</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <name>Beast2Lang</name>
    <description>A concise model definition language for Beast2 that translates to and from PhyloSpec/ModelPhy</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <antlr4.version>4.12.0</antlr4.version>
        <maven.compiler.release>11</maven.compiler.release>
    </properties>

    <dependencies>
        <!-- ANTLR4 runtime -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>${antlr4.version}</version>
        </dependency>

        <!-- JSON library -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20231013</version>
            <scope>provided</scope> <!-- This will prevent it from being included in the final jar -->
        </dependency>

        <!-- Command line parsing -->
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>4.7.4</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>beast2</groupId>
            <artifactId>beast-base</artifactId>
            <version>2.7.7</version>
        </dependency>
        <dependency>
            <groupId>beast2</groupId>
            <artifactId>beast-app</artifactId>
            <version>2.7.7</version>
        </dependency>
        <dependency>
            <groupId>beast2</groupId>
            <artifactId>beast-launcher</artifactId>
            <version>2.7.7</version>
        </dependency>
        <dependency>
            <groupId>beast.app</groupId>
            <artifactId>beastlauncher</artifactId>
            <version>0.1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>




    <build>
        <plugins>

            <!-- Add this plugin to your pom.xml -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <execution>
                        <id>copy-launcher</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>beast.app</groupId>
                                    <artifactId>beastlauncher</artifactId>
                                    <version>0.1.0-SNAPSHOT</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <destFileName>beastlauncher-0.1.0-SNAPSHOT.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Update the antrun plugin to copy lib directory and the updated script -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>create-shell-script</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- Copy launcher jar to lib directory in final distribution -->
                                <mkdir dir="${project.build.directory}/lib" />
                                <copy todir="${project.build.directory}/lib">
                                    <fileset dir="${project.build.directory}/lib" includes="beastlauncher-*.jar" />
                                </copy>

                                <!-- Create the updated script -->
                                <echo file="${project.build.directory}/beast2lang">#!/bin/sh
                                    # Generic script for Beast2Lang using the BeastGenericLauncher

                                    # Determine the location of this script
                                    SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &amp;&amp; pwd )"

                                    # Find BEAST 2.7.x installation
                                    if [ -z "$BEAST" ]; then
                                    # macOS Applications directory - look for any BEAST 2.7.x
                                    if [ -d "/Applications" ]; then
                                    BEAST_DIR=$(find /Applications -maxdepth 1 -type d -name "BEAST 2.7*" | sort -r | head -n 1)
                                    if [ ! -z "$BEAST_DIR" ]; then
                                    BEAST="$BEAST_DIR"
                                    fi
                                    fi

                                    # Check specific version as fallback
                                    if [ -z "$BEAST" ]; then
                                    if [ -d "/Applications/BEAST 2.7.7" ]; then
                                    BEAST="/Applications/BEAST 2.7.7"
                                    fi
                                    fi

                                    if [ ! -z "$BEAST" ]; then
                                    echo "Found BEAST installation at: $BEAST"
                                    fi
                                    fi

                                    # Set Java
                                    JAVA="java"
                                    if [ ! -z "$BEAST" ] &amp;&amp; [ -x "${BEAST}/jre/bin/java" ]; then
                                    JAVA="${BEAST}/jre/bin/java"
                                    fi

                                    # Set classpath with beast2lang.jar, beastlauncher.jar and beast-launcher.jar
                                    BEAST2LANG_JAR="${SCRIPT_DIR}/beast2lang-0.1.0-SNAPSHOT-jar-with-dependencies.jar"
                                    if [ ! -f "$BEAST2LANG_JAR" ]; then
                                    # Try alternate name
                                    BEAST2LANG_JAR="${SCRIPT_DIR}/beast2lang-0.1.0-SNAPSHOT.jar"
                                    fi

                                    LAUNCHER_JAR="${SCRIPT_DIR}/lib/beastlauncher-0.1.0-SNAPSHOT.jar"
                                    BEAST_LAUNCHER_JAR=""

                                    if [ ! -z "$BEAST" ]; then
                                    if [ -f "${BEAST}/lib/launcher.jar" ]; then
                                    BEAST_LAUNCHER_JAR="${BEAST}/lib/launcher.jar"
                                    fi

                                    # Set BEAST_PACKAGE_PATH system property
                                    if [ -d "${BEAST}/lib/packages" ]; then
                                    BEAST_PACKAGE_PATH="${BEAST}/lib/packages"
                                    echo "Setting BEAST_PACKAGE_PATH to: ${BEAST_PACKAGE_PATH}"
                                    fi
                                    fi

                                    # Set up classpath - IMPORTANT: include Beast2Lang JAR first
                                    CP="${BEAST2LANG_JAR}"
                                    if [ ! -z "$LAUNCHER_JAR" ] &amp;&amp; [ -f "$LAUNCHER_JAR" ]; then
                                    CP="${CP}:${LAUNCHER_JAR}"
                                    fi
                                    if [ ! -z "$BEAST_LAUNCHER_JAR" ]; then
                                    CP="${CP}:${BEAST_LAUNCHER_JAR}"
                                    fi

                                    # Report the classpath for debugging
                                    echo "Using classpath: $CP"

                                    # Run the application using the generic launcher
                                    "$JAVA" -Dlauncher.wait.for.exit=true -Xss256m -Xmx4g \
                                    -Dbeast.user.package.dir=user.pkgs \
                                    -DBEAST_PACKAGE_PATH="${BEAST_PACKAGE_PATH}" \
                                    -cp "$CP" beast.app.launcher.BeastGenericLauncher \
                                    --main org.beast2.modelLanguage.Beast2Lang "$@"
                                </echo>
                                <chmod file="${project.build.directory}/beast2lang" perm="755"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

<!-- Plugin to create an executable JAR with dependencies -->
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-assembly-plugin</artifactId>
    <version>3.4.2</version>
    <executions>
        <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
                <goal>single</goal>
            </goals>
            <configuration>
                <descriptorRefs>
                    <descriptorRef>jar-with-dependencies</descriptorRef>
                </descriptorRefs>
                <archive>
                    <manifest>
                        <mainClass>org.beast2.modelLanguage.Beast2Lang</mainClass>
                    </manifest>
                </archive>
            </configuration>
        </execution>
    </executions>
</plugin>

            <!-- ANTLR4 plugin -->
<plugin>
    <groupId>org.antlr</groupId>
    <artifactId>antlr4-maven-plugin</artifactId>
    <version>${antlr4.version}</version>
    <executions>
        <execution>
            <id>antlr</id>
            <goals>
                <goal>antlr4</goal>
            </goals>
            <configuration>
                <sourceDirectory>${project.basedir}/src/main/antlr4</sourceDirectory>
                <outputDirectory>${project.build.directory}/generated-sources/antlr4</outputDirectory>
                <visitor>true</visitor>
                <listener>true</listener>
                <treatWarningsAsErrors>false</treatWarningsAsErrors>
                <arguments>
                    <argument>-package</argument>
                    <argument>org.beast2.modelLanguage.parser</argument>
                </arguments>
            </configuration>
        </execution>
    </executions>
</plugin>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                </configuration>
            </plugin>

            <!-- Maven Shade Plugin for creating executable jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.beast2.modelLanguage.Beast2Lang</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven Surefire Plugin for running tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
            </plugin>
        </plugins>
    </build>
</project>
